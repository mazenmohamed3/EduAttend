# Get Student's own details
query GetStudentData @auth(level: USER) {
  student(key: { id_expr: "auth.uid" }) {
    id
    email
    name
  }
}

# List Student objects with filtering and pagination
query ListStudents($id: String, $offset: Int, $limit: Int) @auth(level: USER){
  students(offset: $offset, limit: $limit, where: {id: {eq: $id}}) {
    id
    email
    name
  }
}

# Get Instructor's own details
query GetInstructor @auth(level: USER) {
  instructor(key: { id_expr: "auth.uid" }) {
    id
    email
    name
  }
}

# List Instructor objects with filtering and pagination
query ListInstructors($id: String, $offset: Int, $limit: Int) @auth(level: USER){
  instructors(offset: $offset, limit: $limit, where: {id: {eq: $id}}) {
    id
    email
    name
  }
}

# Get a single Group's details
query GetGroup($id: UUID) {
  group(id: $id) {
    id
    subject {
      id
      name
    }
    day
    startTime
    endTime
  }
}

# List Group objects with filtering and pagination
query ListGroups($id: UUID, $offset: Int, $limit: Int) @auth(level: USER){
  groups(offset: $offset, limit: $limit, where: {id: {eq: $id}}) {
    id
    subject {
      id
      name
    }
    day
    startTime
    endTime
  }
}

# Get a single Attendance record's details
query GetAttendance($id: UUID) {
  attendance(id: $id) {
    id
    group {
      id
      subject {
        name
      }
    }
    student {
      id
      name
    }
    status
    attendanceDate
  }
}

# List Attendance records with filtering and pagination
query ListAttendances($id: UUID, $offset: Int, $limit: Int) @auth(level: USER){
  attendances(offset: $offset, limit: $limit, where: {id: {eq: $id}}) {
    id
    group {
      id
      subject {
        name
      }
    }
    student {
      id
      name
    }
    status
    attendanceDate
  }
}

# Get a single Subject's details
query GetSubject($id: UUID) {
  subject(id: $id) {
    id
    name
    subjectCode
    teachedBy {
      id
      name
    }
  }
}

# List Subject objects with filtering and pagination
query ListSubjects($id: UUID, $offset: Int, $limit: Int) @auth(level: USER){
  subjects(offset: $offset, limit: $limit, where: {id: {eq: $id}}) {
    id
    name
    subjectCode
    teachedBy {
      id
      name
    }
  }
}